# Generated by Django 5.0.3 on 2024-07-14 19:47

import django.db.models.deletion
import django.utils.timezone
import pathlib
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TelegramAccount',
            fields=[
                ('telegram_id', models.PositiveBigIntegerField(db_index=True, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='telegram ID')),
                ('first_name', models.CharField(editable=False, max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(editable=False, max_length=255, null=True, verbose_name='last name')),
                ('username', models.CharField(max_length=255, null=True, verbose_name='username')),
                ('registration_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='registration date')),
                ('last_message_processed_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='date of last message processed')),
                ('is_bot', models.BooleanField(editable=False, verbose_name='is a bot')),
                ('is_blocked', models.BooleanField(default=True, verbose_name='is blocked')),
            ],
            options={
                'verbose_name': 'account',
                'verbose_name_plural': 'accounts',
                'db_table': 'telegram_account',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TelegramChatMessage',
            fields=[
                ('update_id', models.PositiveBigIntegerField(db_index=True, help_text="update's unique identifier, allows you to ignore repeated updates or to restore the correct update sequence", primary_key=True, serialize=False, verbose_name='update ID')),
                ('message_id', models.PositiveIntegerField(help_text='unique message identifier inside the chat', verbose_name='message ID')),
                ('message', models.CharField(max_length=255, verbose_name='message')),
                ('request_data', models.JSONField(verbose_name='request data')),
                ('response_data', models.JSONField(null=True, verbose_name='response data')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('TelegramAccount_telegram_id', models.ForeignKey(db_column='TelegramAccount_telegram_id', on_delete=django.db.models.deletion.RESTRICT, to='telegram.telegramaccount', verbose_name='telegram account')),
            ],
            options={
                'verbose_name': 'chat message',
                'verbose_name_plural': 'chat messages',
                'db_table': 'telegram_chat_message',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TelegramYoutubeDownload',
            fields=[
                ('id', models.AutoField(auto_created=True, editable=False, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(help_text='Youtube url where file was downloaded from')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('content_type', models.PositiveSmallIntegerField(choices=[(0, 'audio/mp3')], verbose_name='content type')),
                ('file_path', models.FilePathField(max_length=200, path=pathlib.PureWindowsPath('C:/Users/tiago/Desktop/Repositorio/GitLab/WandecleideSE/src/temp/youtube'), recursive=True, verbose_name='file path')),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='creation date')),
                ('TelegramAccount_telegram_id', models.ForeignKey(db_column='TelegramAccount_telegram_id', on_delete=django.db.models.deletion.RESTRICT, to='telegram.telegramaccount', verbose_name='telegram account')),
            ],
            options={
                'verbose_name': 'Youtube download',
                'verbose_name_plural': 'Youtube downloads',
                'db_table': 'telegram_youtube_download',
                'managed': True,
            },
        ),
    ]
